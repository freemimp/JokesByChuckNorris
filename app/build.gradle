apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.freemimp.android.jokesbychucknorris"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "apiEndppoint", '\"http://api.icndb.com/jokes/\"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'android.arch.paging:runtime:1.0.1'
    implementation 'com.android.support:support-v4:28.0.0'


    //test dependencies

    def jUnitVersion = '4.12'
    def testRunnerVersion = '1.0.2'
    def espressoCoreVersion = '3.0.2'
    def mockitoVersion = '2.23.0'
    def mockitoKotlinVersion = '2.1.0'
    def lifecycle_version = '1.1.1'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    androidTestImplementation "android.arch.core:core-testing:$lifecycle_version"

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoCoreVersion"

    //retrofit
    def okhttpVersion = '3.12.0'
    def retrofitVer = '2.5.0'
    def coroutinesAdapterVersion = '0.9.2'
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVer"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVer"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutinesAdapterVersion"

    //dagger2
    def daggerVersion = '2.17'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    //coroutines
    def coroutinesVersion = '1.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"


}
